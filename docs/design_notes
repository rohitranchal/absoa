Domain Authentication with AB
===============================================================================
The AB needs to know its execution environment.
Steps:

- Environment (E) asks to be challenged
- AB returns a random string
- E signs the random string with its private key and return the signature and the certificate
- AB verifies the signature using the certificate
- AB checks its black lists and white lists for any rules about the domain using the certificate DN
- Returns a session ID

AB interceptor will add the session ID to the message/message context of the request so that it can be collected at the service.



Service Requesting Values from AB
===============================================================================
- Service extends the ABCommunicator
- ABCommunicator : getValue()
- Service implementation will call getValue() as required
- getValue() implementation in ABCommunicator will invoke the AB, to obtain values.



Data in Active Bundles
===============================================================================
Main data structure is a table:

+---------------+-------+
| Key           | Value |
+---------------+-------+
| ab.user.name  | Alice |
| ab.user.zip   | 47906 |
| com.foo.bar   | mar   |
+---------------+-------+


Active Bundle Service API
===============================================================================
The Active Bundle will offer these functions

- String authenticateChallenge() // returns a random string
- String authenticateResponse(String signedChallenge, String certificate) // return a session id
- String getValue(String sessionID, String key) // returns the value for the key if the session id is correct
- VerifyIntegrity() // check AB integrity 
 
AB should have a CA's cert which is the trust root of all certificates 
AB will verify the received cert such that it leads to CA chain
AB should also receive the token back in the authchallenge()
Use set for tokens to lookup token

Use sessionID as value and certificate as key

- We don't need mutual authentication because AB can travel to secondary parties and so on
so we only do one way authentication where AB authenticates the service. 

- authenticateResponse() 
{
    1. verify service cert
    2. verify cert chain leading to CA
    3. verify sign
    4. generate an AES key for session with service
    5. encrypt session key with service cert
    6. return encrypted session key
}

? When service invokes authenticatechallenge and authenticateResponse and sends data
can that data be tampered with as it is not encrypted ?


